{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","getUserById","userId","usersFromServer","find","initialTodos","App","useState","setTodos","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setUserIdError","action","method","onSubmit","event","allTodos","preventDefault","newTodo","prevTodo","addNewTodo","Math","max","type","placeholder","value","onChange","target","disabled","userFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8e6cf51.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../type/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../type/todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, user, title, completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../type/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo } from './type/todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getNewTodoId(allTodos: Todo[]) {\n  const todoId = Math.max(\n    ...allTodos.map(todo => todo.id),\n  );\n\n  return todoId + 1;\n}\n\nconst initialTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserIdError(false);\n  };\n\n  const handleReset = () => {\n    setTitle('');\n    setHasTitleError(false);\n\n    setUserId(0);\n    setUserIdError(false);\n  };\n\n  const addNewTodo = (newTodo: Todo) => {\n    setTodos(prevTodo => [...prevTodo, newTodo]);\n  };\n\n  const handleAdd = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    const newTodo = ({\n      id: getNewTodoId(todos),\n      user: getUserById(userId),\n      userId,\n      title,\n      completed: false,\n    });\n\n    addNewTodo(newTodo);\n    handleReset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleAdd}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option key=\"0\" value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map((userFromServer) => (\n              <option\n                key={userFromServer.id}\n                value={userFromServer.id}\n              >\n                {userFromServer.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}